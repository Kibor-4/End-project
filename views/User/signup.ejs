<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sign Up</title>
    <link rel="stylesheet" href="../Public/stylesheet/signup.css">
    <link rel="shortcut icon" href="./favicon.svg" type="image/svg+xml">
</head>
<body>
    <div class="signup">
        <form id="signupForm" action="/register" method="POST">
            <h3 id="signup-title">SIGN UP</h3>
            <div class="form-group">
                <label class="label" for="username">Username</label>
                <input type="text" placeholder="Enter Username" required name="username" id="username" aria-describedby="usernameError">
                <div class="error" id="usernameError"></div>
            </div>

            <div class="form-group">
                <label class="label" for="email">Email</label>
                <input type="email" placeholder="Enter email" required name="email" id="email" aria-describedby="emailError">
                <div class="error" id="emailError"></div>
            </div>

            <div class="form-group">
                <label class="label" for="phone">Phone</label>
                <input type="tel" placeholder="Enter phone (e.g., +1234567890)" required name="phone" id="phone" aria-describedby="phoneError">
                <div class="error" id="phoneError"></div>
            </div>

            <div class="form-group">
                <label class="label" for="dobInput">Date Of Birth</label>
                <input id="dobInput" type="date" name="dob" required aria-describedby="dobError">
                <div class="error" id="dobError"></div>
            </div>

            <div class="form-group">
                <label class="label" for="password">Password</label>
                <input type="password" placeholder="Enter Password" required id="password" name="password" aria-describedby="passwordError">
                <button type="button" class="toggle-password" aria-label="Show password" data-target="password">
                    <svg class="eye-icon" viewBox="0 0 24 24">
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
                    </svg>
                </button>
                <div class="error" id="passwordError"></div>
            </div>

            <div class="form-group">
                <label class="label" for="confirmPassword">Confirm Password</label>
                <input type="password" placeholder="Confirm Password" required id="confirmPassword" name="confirmPassword" aria-describedby="confirmPasswordError">
                <button type="button" class="toggle-password" aria-label="Show password" data-target="confirmPassword">
                    <svg class="eye-icon" viewBox="0 0 24 24">
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>
                    </svg>
                </button>
                <div class="error" id="confirmPasswordError"></div>
            </div>

            

            <button class="register" type="submit">Register</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.getElementById('signupForm');
            const usernameInput = document.getElementById('username');
            const emailInput = document.getElementById('email');
            const phoneInput = document.getElementById('phone');
            const dobInput = document.getElementById('dobInput');
            const passwordInput = document.getElementById('password');
            const confirmPasswordInput = document.getElementById('confirmPassword');
            const usernameError = document.getElementById('usernameError');
            const emailError = document.getElementById('emailError');
            const phoneError = document.getElementById('phoneError');
            const dobError = document.getElementById('dobError');
            const passwordError = document.getElementById('passwordError');
            const confirmPasswordError = document.getElementById('confirmPasswordError');

            // Password toggle functionality
            const toggleButtons = document.querySelectorAll('.toggle-password');
            toggleButtons.forEach(button => {
                button.addEventListener('click', () => {
                    try {
                        const targetId = button.getAttribute('data-target');
                        const input = document.getElementById(targetId);
                        const svg = button.querySelector('.eye-icon');

                        if (!input) {
                            console.error(`Input with ID ${targetId} not found`);
                            return;
                        }

                        if (input.type === 'password') {
                            input.type = 'text';
                            svg.innerHTML = '<path d="M12 6.5c2.76 0 5 2.24 5 5 0 .82-.16 1.59-.44 2.31l3.02 3.02C20.64 15.22 21.5 13.4 22 12c-1.73-4.39-6-7.5-11-7.5-1.4 0-2.73.25-3.98.7l2.28 2.28c.72-.28 1.49-.44 2.31-.44zM1.1 1.1l3.49 3.49C3.22 6.2 2.04 8.28 1.36 10.62L1 12c1.73 4.39 6 7.5 11 7.5 1.4 0 2.73-.25 3.98-.7l3.61 3.61 1.41-1.41L2.51 1.1 1.1 1.1zm6.98 6.98l2.54 2.54c-.02.17-.04.34-.04.52 0 1.66 1.34 3 3 3 .18 0 .35-.02.52-.04l2.54 2.54C14.73 19.25 13.44 20 12 20c-4.41 0-8.58-2.86-10-7.09l.36-.91c.49-1.23 1.15-2.34 1.94-3.33l2.78 2.78z"/>';
                            button.setAttribute('aria-label', 'Hide password');
                        } else {
                            input.type = 'password';
                            svg.innerHTML = '<path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"/>';
                            button.setAttribute('aria-label', 'Show password');
                        }
                    } catch (error) {
                        console.error('Toggle password error:', error);
                    }
                });
            });

            form.addEventListener('submit', (event) => {
                // Reset error messages and error classes
                usernameError.textContent = '';
                emailError.textContent = '';
                phoneError.textContent = '';
                dobError.textContent = '';
                passwordError.textContent = '';
                confirmPasswordError.textContent = '';
                [usernameInput, emailInput, phoneInput, dobInput, passwordInput, confirmPasswordInput].forEach(input => input.classList.remove('error'));

                let isValid = true;

                // Username validation
                if (usernameInput.value.trim() === '') {
                    usernameError.textContent = 'Username is required';
                    usernameInput.classList.add('error');
                    isValid = false;
                } else if (usernameInput.value.length < 3) {
                    usernameError.textContent = 'Username must be at least 3 characters';
                    usernameInput.classList.add('error');
                    isValid = false;
                }

                // Email validation
                if (emailInput.value.trim() === '') {
                    emailError.textContent = 'Email is required';
                    emailInput.classList.add('error');
                    isValid = false;
                } else if (!isValidEmail(emailInput.value)) {
                    emailError.textContent = 'Invalid email format';
                    emailInput.classList.add('error');
                    isValid = false;
                }

                // Phone validation
                if (phoneInput.value.trim() === '') {
                    phoneError.textContent = 'Phone is required';
                    phoneInput.classList.add('error');
                    isValid = false;
                } else if (!/^\+?[\d\s-]{10,15}$/.test(phoneInput.value)) {
                    phoneError.textContent = 'Invalid phone number (e.g., +1234567890)';
                    phoneInput.classList.add('error');
                    isValid = false;
                }

                // Date of Birth validation
                if (dobInput.value === '') {
                    dobError.textContent = 'Date of Birth is required';
                    dobInput.classList.add('error');
                    isValid = false;
                } else {
                    const dob = new Date(dobInput.value);
                    const today = new Date();
                    const minDate = new Date(today.getFullYear() - 120, today.getMonth(), today.getDate());
                    if (isNaN(dob.getTime()) || dob > today || dob < minDate) {
                        dobError.textContent = 'Invalid date of birth';
                        dobInput.classList.add('error');
                        isValid = false;
                    }
                }

                // Password validation
                if (passwordInput.value.trim() === '') {
                    passwordError.textContent = 'Password is required';
                    passwordInput.classList.add('error');
                    isValid = false;
                } else if (passwordInput.value.length < 8) {
                    passwordError.textContent = 'Password must be at least 8 characters';
                    passwordInput.classList.add('error');
                    isValid = false;
                }

                // Confirm Password validation
                if (confirmPasswordInput.value.trim() === '') {
                    confirmPasswordError.textContent = 'Confirm Password is required';
                    confirmPasswordInput.classList.add('error');
                    isValid = false;
                } else if (passwordInput.value !== confirmPasswordInput.value) {
                    confirmPasswordError.textContent = 'Passwords do not match';
                    confirmPasswordInput.classList.add('error');
                    isValid = false;
                }

                if (!isValid) {
                    event.preventDefault();
                    console.log('Form validation failed');
                }
            });

            function isValidEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }
        });
    </script>
</body>
</html>